{"version":3,"sources":["images/deaths-large.png","components/Navbar.js","api/index.js","components/Spinner.js","components/Charts/GlobalDataChart.js","components/Cards/Cards.js","components/Charts/Charts.js","components/CountryPicker/CountryPicker.js","components/Footer.js","App.js","index.js","images/cases.png","images/recovered.png"],"names":["module","exports","Navbar","className","src","logo","style","width","alt","href","api","NovelCovid","fetchDate","a","all","cases","todayCases","recovered","deaths","todayDeaths","updated","modifiedData","console","log","fetchLocalCountry","countryName","selectCountry","countries","country","countryInfo","critical","flag","fetchCountryData","res","map","data","code","iso2","fetchDaily","axios","get","dailyData","confirmed","total","date","reportDate","Spinner","xmlns","x","y","version","viewBox","xmlSpace","cx","cy","r","fill","stroke","strokeMiterlimit","strokeWidth","strokeLinecap","d","attributeName","dur","from","repeatCount","to","type","GlobalDataChart","useState","globalData","setGlobalData","useEffect","fetchDataAPI","labels","datasets","label","backgroundColor","borderColor","Cards","fromNow","casesImg","start","end","duration","separator","deathsImg","recoveredImg","Charts","setDailyData","fetchAPI","lineChart","length","options","title","display","text","fontSize","Option","Select","CountryPicker","handleCountryChange","localData","fetchedCountryData","setFetchedCountryData","fetchedAPI","onChange","showSearch","size","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","value","i","key","Footer","target","App","state","setState","this","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.76771e49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deaths-large.b379f9d1.png\";","import React from 'react';\r\nimport logo from '../images/deaths-large.png';\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='navbar sticky-top bg-white border-bottom'>\r\n      <div className='container'>\r\n        <div className='d-flex align-items-center'>\r\n          <img className='logo' src={logo} style={{ width: '55px' }} alt='logo' />\r\n          <h5 className='mb-0 font-weight-bold'>\r\n            COVID-19 <br />\r\n            <small className='text-muted font-weight-light'>Corona Virus</small>\r\n          </h5>\r\n        </div>\r\n        <ul className='navbar-nav flex-row ml-auto'>\r\n          <li className='nav-item'>\r\n            <a\r\n              href='https://facebook.com/hasibmolla28/'\r\n              className='nav-link icon facebook'\r\n            >\r\n              <i className='fab fa-facebook'></i>\r\n            </a>\r\n          </li>\r\n          <li className='nav-item ml-3'>\r\n            <a\r\n              href='https://github.com/MuttakinHasib/'\r\n              className='nav-link icon github'\r\n            >\r\n              <i className='fab fa-github'></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { NovelCovid } from 'novelcovid';\r\nimport axios from 'axios';\r\n\r\nconst api = new NovelCovid();\r\nconst url = ' https://covid19.mathdro.id/api';\r\n\r\n// Global Data\r\n\r\nexport const fetchDate = async () => {\r\n  try {\r\n    const {\r\n      cases,\r\n      todayCases,\r\n      recovered,\r\n      deaths,\r\n      todayDeaths,\r\n      updated,\r\n    } = await api.all();\r\n\r\n    const modifiedData = {\r\n      cases,\r\n      todayCases,\r\n      recovered,\r\n      todayDeaths,\r\n      deaths,\r\n      updated,\r\n    };\r\n    return modifiedData;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Local Country\r\n\r\nexport const fetchLocalCountry = async countryName => {\r\n  let selectCountry = 'Bangladesh';\r\n  if (countryName) {\r\n    selectCountry = countryName;\r\n  }\r\n  try {\r\n    const {\r\n      country,\r\n      countryInfo,\r\n      cases,\r\n      todayCases,\r\n      recovered,\r\n      deaths,\r\n      todayDeaths,\r\n      critical,\r\n      updated,\r\n    } = await api.countries(selectCountry);\r\n\r\n    const modifiedData = {\r\n      country,\r\n      flag: countryInfo.flag,\r\n      cases,\r\n      todayCases,\r\n      recovered,\r\n      todayDeaths,\r\n      deaths,\r\n      critical,\r\n      updated,\r\n    };\r\n\r\n    return modifiedData;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Select Country\r\n\r\nexport const fetchCountryData = async () => {\r\n  try {\r\n    const res = await api.countries();\r\n    return res.map(data => ({\r\n      country: data.country,\r\n      code: data.countryInfo.iso2,\r\n      flag: data.countryInfo.flag,\r\n    }));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Daily Data\r\n\r\nexport const fetchDaily = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React from 'react';\r\nconst Spinner = () => {\r\n  return (\r\n    <svg\r\n      className='clock'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      x='0'\r\n      y='0'\r\n      version='1.1'\r\n      viewBox='0 0 100 100'\r\n      xmlSpace='preserve'\r\n    >\r\n      <circle\r\n        cx='50'\r\n        cy='50'\r\n        r='48'\r\n        fill='none'\r\n        stroke='#f36'\r\n        strokeMiterlimit='10'\r\n        strokeWidth='4'\r\n      ></circle>\r\n      <path\r\n        fill='none'\r\n        stroke='rgb(29, 209, 161)'\r\n        strokeLinecap='round'\r\n        strokeMiterlimit='10'\r\n        strokeWidth='4'\r\n        d='M50 50L85 50.5'\r\n      >\r\n        <animateTransform\r\n          attributeName='transform'\r\n          dur='2s'\r\n          from='0 50 50'\r\n          repeatCount='indefinite'\r\n          to='360 50 50'\r\n          type='rotate'\r\n        ></animateTransform>\r\n      </path>\r\n      <path\r\n        fill='none'\r\n        stroke='rgba(26, 16, 83, 0.603)'\r\n        strokeLinecap='round'\r\n        strokeMiterlimit='10'\r\n        strokeWidth='4'\r\n        d='M50 50L49.5 74'\r\n      >\r\n        <animateTransform\r\n          attributeName='transform'\r\n          dur='15s'\r\n          from='0 50 50'\r\n          repeatCount='indefinite'\r\n          to='360 50 50'\r\n          type='rotate'\r\n        ></animateTransform>\r\n      </path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDate } from '../../api';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Spinner from '../Spinner';\r\n\r\nconst GlobalDataChart = () => {\r\n  const [globalData, setGlobalData] = useState({});\r\n  useEffect(() => {\r\n    const fetchDataAPI = async () => {\r\n      setGlobalData(await fetchDate());\r\n    };\r\n    fetchDataAPI();\r\n  }, []);\r\n  // const { cases, deaths, recovered } = globalData;\r\n  if (!globalData?.cases) return <Spinner />;\r\n  const doughnut = globalData?.cases ? (\r\n    <Doughnut\r\n      data={{\r\n        labels: ['Confirmed', 'Deaths', 'Recovered'],\r\n        datasets: [\r\n          {\r\n            label: 'COVID-19',\r\n            backgroundColor: [\r\n              'rgba(26, 16, 83, 0.603)',\r\n              'rgb(255, 99, 132)',\r\n              'rgb(29, 209, 161)',\r\n            ],\r\n            borderColor: '#fff',\r\n            data: [\r\n              globalData?.cases,\r\n              globalData?.deaths,\r\n              globalData?.recovered,\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return doughnut;\r\n};\r\n\r\nexport default GlobalDataChart;\r\n","import React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport casesImg from '../../images/cases.png';\r\nimport deathsImg from '../../images/deaths-large.png';\r\nimport recoveredImg from '../../images/recovered.png';\r\nimport Moment from 'react-moment';\r\nimport GlobalDataChart from '../Charts/GlobalDataChart';\r\n\r\nconst Cards = ({ data }) => {\r\n  return (\r\n    <div className='landing'>\r\n      <div className='container'>\r\n        <div className='row py-5 justify-content-between align-items-center global'>\r\n          <div className='col-md-12'>\r\n            <div className='row justify-content-between align-items-center'>\r\n              <div className='col-sm-6'>\r\n                <h3>Global information : </h3>\r\n              </div>\r\n              <div className='col-sm-6 text-sm-right'>\r\n                <h5>\r\n                  {data?.updated ? (\r\n                    <small className='text-muted'>\r\n                      Last updated <Moment fromNow>{data?.updated}</Moment>\r\n                    </small>\r\n                  ) : (\r\n                    <small className='text-info'>Updating . . .</small>\r\n                  )}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-lg-8 text-center my-3'>\r\n            <GlobalDataChart />\r\n          </div>\r\n          <div className='col-lg-4 my-3'>\r\n            <div className='row'>\r\n              <div className='col-md-6 col-sm-12 col-lg-12 my-3'>\r\n                <div className='row cases shadow align-items-center justify-content-between no-gutters'>\r\n                  <div className='col-3'>\r\n                    <img\r\n                      src={casesImg}\r\n                      alt='Cases'\r\n                      className='img-fluid logo'\r\n                    />\r\n                  </div>\r\n                  <div className='col-8'>\r\n                    <h2 className='text-info'>\r\n                      {data?.cases ? (\r\n                        <CountUp\r\n                          start={0}\r\n                          end={data?.cases}\r\n                          duration={2.3}\r\n                          separator={','}\r\n                        />\r\n                      ) : (\r\n                        <small className='text-primary'>Loading . . .</small>\r\n                      )}\r\n                    </h2>\r\n                    <p className='text-muted'>Confirmed</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='col-md-6 col-sm-12 col-lg-12 my-3'>\r\n                <div className='row deaths shadow align-items-center justify-content-between no-gutters'>\r\n                  <div className='col-3'>\r\n                    <img\r\n                      src={deathsImg}\r\n                      alt='Deaths'\r\n                      className='img-fluid logo'\r\n                    />\r\n                  </div>\r\n                  <div className='col-8'>\r\n                    <h2 className='text-danger'>\r\n                      {data?.deaths ? (\r\n                        <CountUp\r\n                          start={0}\r\n                          end={data?.deaths}\r\n                          duration={2.3}\r\n                          separator={','}\r\n                        />\r\n                      ) : (\r\n                        <small className='text-primary'>Loading . . .</small>\r\n                      )}\r\n                    </h2>\r\n                    <p className='text-muted'>Deaths</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='col-md-6 col-sm-12 col-lg-12 my-3'>\r\n                <div className='row recovered shadow align-items-center justify-content-between no-gutters'>\r\n                  <div className='col-3'>\r\n                    <img\r\n                      src={recoveredImg}\r\n                      alt='Recovered'\r\n                      className='img-fluid logo'\r\n                    />\r\n                  </div>\r\n                  <div className='col-8'>\r\n                    <h2 className='text-success'>\r\n                      {data?.recovered ? (\r\n                        <CountUp\r\n                          start={0}\r\n                          end={data?.recovered}\r\n                          duration={2.3}\r\n                          separator={','}\r\n                        />\r\n                      ) : (\r\n                        <small className='text-primary'>Loading . . .</small>\r\n                      )}\r\n                    </h2>\r\n                    <p className='text-muted'>Recovered</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDaily } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Charts = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => setDailyData(await fetchDaily());\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData?.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Confirmed',\r\n            // borderColor: '#ffaa00 ',\r\n            backgroundColor: '#ffaa0057',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            // borderColor: '#f36',\r\n            backgroundColor: 'rgba(255, 51, 102, 0.815)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: 'Coronavirus around the world',\r\n          fontSize: 25,\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className='my-5'>{lineChart}</div>;\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { fetchCountryData } from '../../api';\r\nimport { Select } from 'antd';\r\nimport CountUp from 'react-countup';\r\nimport casesImg from '../../images/cases.png';\r\nimport deathsImg from '../../images/deaths-large.png';\r\nimport recoveredImg from '../../images/recovered.png';\r\nconst { Option } = Select;\r\n\r\n\r\nconst CountryPicker = ({ handleCountryChange, localData }) => {\r\n  const [fetchedCountryData, setFetchedCountryData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchedAPI = async () => {\r\n      setFetchedCountryData(await fetchCountryData());\r\n    };\r\n    fetchedAPI();\r\n  }, [setFetchedCountryData]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='row justify-content-between align-items-center p-3'>\r\n        <div className='col-md-12 text-center'>\r\n          <h1 className='mb-5'>Local Country's Information</h1>\r\n        </div>\r\n        <div className='my-3 d-flex align-items-center'>\r\n          <h4 className='mb-0'>\r\n            {localData?.country ? (\r\n              localData?.country\r\n            ) : (\r\n              <small className='text-primary'>Loading . . .</small>\r\n            )}\r\n          </h4>\r\n          &nbsp; &nbsp;\r\n          <div>\r\n            {localData?.flag ? (\r\n              <img\r\n                src={localData?.flag}\r\n                style={{ width: '35px' }}\r\n                alt={localData?.country}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className='my-3'>\r\n          <div className='form-row'>\r\n            <Select\r\n              onChange={country => handleCountryChange(country)}\r\n              showSearch\r\n              size={'large'}\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Country'\r\n              optionFilterProp='children'\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option value='bangladesh'>Bangladesh</Option>\r\n              {fetchedCountryData?.map((data, i) => (\r\n                <Option key={i} value={data.code}>\r\n                  {data.country}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row local'>\r\n        <div className='col-md-4 my-3'>\r\n          <div className='row cases shadow align-items-center justify-content-between no-gutters'>\r\n            <div className='col-3'>\r\n              <img src={casesImg} alt='Cases' className='img-fluid logo' />\r\n            </div>\r\n            <div className='col-8'>\r\n              <h2 className='text-info'>\r\n                {localData?.cases ? (\r\n                  <CountUp\r\n                    start={0}\r\n                    end={localData?.cases}\r\n                    duration={2.3}\r\n                    separator={','}\r\n                  />\r\n                ) : (\r\n                  <small className='text-primary'>Loading . . .</small>\r\n                )}\r\n              </h2>\r\n              <p className='text-muted'>Confirmed</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-4 my-3'>\r\n          <div className='row deaths shadow align-items-center justify-content-between no-gutters'>\r\n            <div className='col-3'>\r\n              <img src={deathsImg} alt='Deaths' className='img-fluid logo' />\r\n            </div>\r\n            <div className='col-8'>\r\n              <h2 className='text-danger'>\r\n                {localData?.deaths ? (\r\n                  <CountUp\r\n                    start={0}\r\n                    end={localData?.deaths}\r\n                    duration={2.3}\r\n                    separator={','}\r\n                  />\r\n                ) : (\r\n                  <small className='text-primary'>Loading . . .</small>\r\n                )}\r\n              </h2>\r\n              <p className='text-muted'>Deaths</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-4 my-3'>\r\n          <div className='row recovered shadow align-items-center justify-content-between no-gutters'>\r\n            <div className='col-3'>\r\n              <img\r\n                src={recoveredImg}\r\n                alt='Recovered'\r\n                className='img-fluid logo'\r\n              />\r\n            </div>\r\n            <div className='col-8'>\r\n              <h2 className='text-success'>\r\n                {localData?.recovered ? (\r\n                  <CountUp\r\n                    start={0}\r\n                    end={localData?.recovered}\r\n                    duration={2.3}\r\n                    separator={','}\r\n                  />\r\n                ) : (\r\n                  <small className='text-primary'>Loading . . .</small>\r\n                )}\r\n              </h2>\r\n              <p className='text-muted'>Recovered</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row local'>\r\n        <div className='col-md-12 my-3 py-3 text-left'>\r\n          <h3>Today's Last Updates :</h3>\r\n        </div>\r\n        <div className='col-md-4 my-3'>\r\n          <div className='row cases shadow align-items-center justify-content-between no-gutters'>\r\n            <div className='col-3'>\r\n              <img src={casesImg} alt='Cases' className='img-fluid logo' />\r\n            </div>\r\n            <div className='col-8'>\r\n              <h2 className='text-info'>\r\n                {localData?.todayCases ? (\r\n                  <CountUp\r\n                    start={0}\r\n                    end={localData?.todayCases}\r\n                    duration={2.3}\r\n                    separator={','}\r\n                  />\r\n                ) : (\r\n                  <small className='text-primary'>Loading . . .</small>\r\n                )}\r\n              </h2>\r\n              <p className='text-muted'>New Cases</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-4 my-3'>\r\n          <div className='row deaths shadow align-items-center justify-content-between no-gutters'>\r\n            <div className='col-3'>\r\n              <img src={deathsImg} alt='Deaths' className='img-fluid logo' />\r\n            </div>\r\n            <div className='col-8'>\r\n              <h2 className='text-danger'>\r\n                {localData?.todayDeaths ? (\r\n                  <CountUp\r\n                    start={0}\r\n                    end={localData?.todayDeaths}\r\n                    duration={2.3}\r\n                    separator={','}\r\n                  />\r\n                ) : (\r\n                  <small className='text-primary'>Loading . . .</small>\r\n                )}\r\n              </h2>\r\n              <p className='text-muted'>New Deaths</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-4 my-3'>\r\n          <div className='row recovered shadow align-items-center justify-content-between no-gutters'>\r\n            <div className='col-3'>\r\n              <img\r\n                src={recoveredImg}\r\n                alt='Recovered'\r\n                className='img-fluid logo'\r\n              />\r\n            </div>\r\n            <div className='col-8'>\r\n              <h2 className='text-warning'>\r\n                {localData?.critical ? (\r\n                  <CountUp\r\n                    start={0}\r\n                    end={localData?.critical}\r\n                    duration={2.3}\r\n                    separator={','}\r\n                  />\r\n                ) : (\r\n                  <small className='text-primary'>Loading . . .</small>\r\n                )}\r\n              </h2>\r\n              <p className='text-muted'>Critical</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport { BrowserRouter as Link } from 'react-router-dom';\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className='container'>\r\n        <p className='lead text-center p-4'>\r\n          Made with <i className='fas heart fa-heart'></i> by{' '}\r\n          <Link href='https://facebook.com/hasibmolla28/' target='_blank'>\r\n            Hasib\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport './App.module.css';\r\nimport { Navbar, Cards, Charts, CountryPicker } from './components';\r\nimport { fetchDate, fetchLocalCountry } from './api';\r\nimport Footer from './components/Footer';\r\nclass App extends Component {\r\n  state = { data: {}, localData: {}, country: '', flag: '' };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await fetchDate();\r\n      const localData = await fetchLocalCountry();\r\n      this.setState({ data, localData });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  handleCountryChange = async country => {\r\n    const localData = await fetchLocalCountry(country);\r\n    // console.log(localData);\r\n    this.setState({ localData });\r\n  };\r\n  render() {\r\n    const { data, localData } = this.state;\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <Cards data={data} />\r\n        <div className='container'>\r\n          <CountryPicker\r\n            localData={localData}\r\n            handleCountryChange={this.handleCountryChange}\r\n          />\r\n          <Charts />\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/cases.feea5fb1.png\";","module.exports = __webpack_public_path__ + \"static/media/recovered.66525ad4.png\";"],"sourceRoot":""}